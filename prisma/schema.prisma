// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "libsql"
  url      = env("DATABASE_URL")
}


//careful, uppercase first letters
model User {
  id               Int        @id @default(autoincrement())
  username         String
  email            String     @unique
  password         String
  role             String     @default("user")
  Seller           Seller?
  Buyer            Buyer?
  Deliverer        Deliverer?
  Admin            Admin?
  Rating           Rating[]
  Comment          Comment[]
  sentMessages     Message[]  @relation("Sender")
  receivedMessages Message[]  @relation("Receiver")
}

model Seller {
  id       Int    @id @default(autoincrement())
  userId   Int    @unique
  email    String @unique
  user     User   @relation(fields: [userId], references: [id])
  shopName String
  address  String
  Item     Item[]
}

model Buyer {
  id      Int    @id @default(autoincrement())
  userId  Int    @unique
  email   String @unique
  user    User   @relation(fields: [userId], references: [id])
  address String
}

model Deliverer {
  id      Int    @id @default(autoincrement())
  userId  Int    @unique
  email   String @unique
  user    User   @relation(fields: [userId], references: [id])
  vehicle String
}

model Admin {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  email  String @unique
  user   User   @relation(fields: [userId], references: [id])
  Item   Item[]
}

model Item {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  price       Float
  rating      Float?
  photos      Photo[]
  category    String
  inStock     Int
  sellerId    Int?
  adminId     Int?
  seller      Seller?   @relation(fields: [sellerId], references: [id])
  admin       Admin?    @relation(fields: [adminId], references: [id])
  Rating      Rating[]
  Comment     Comment[]
}

model Rating {
  id     Int   @id @default(autoincrement())
  value  Float // Rating value (e.g., from 1 to 5)
  userId Int
  itemId Int
  user   User  @relation(fields: [userId], references: [id])
  item   Item  @relation(fields: [itemId], references: [id])
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String // The comment text
  userId  Int
  itemId  Int
  user    User   @relation(fields: [userId], references: [id])
  item    Item   @relation(fields: [itemId], references: [id])
}

model Message {
  id         Int    @id @default(autoincrement())
  content    String // The message text
  senderId   Int
  receiverId Int
  sender     User   @relation("Sender", fields: [senderId], references: [id])
  receiver   User   @relation("Receiver", fields: [receiverId], references: [id])
}

model Photo {
  id     Int    @id @default(autoincrement())
  url    String 
  itemId Int    
  item   Item   @relation(fields: [itemId], references: [id]) 
}
